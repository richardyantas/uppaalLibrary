<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>

typedef double v_t;  

clock x;

double y = 5.0;

import "libdata.so"
{
    double getVolume();
};

//v_t V = getVolume();

</declaration>
	<template>
		<name x="5" y="5">Template</name>
		<declaration>// Place local declarations here.

double r = getVolume();

void foo()
{
    r = 10.0;
}

void var()
{
    r = 40.0;
}</declaration>
		<location id="id0" x="-365" y="-127">
			<label kind="exponentialrate" x="-375" y="-93">1</label>
		</location>
		<location id="id1" x="-51" y="-127">
			<label kind="exponentialrate" x="-61" y="-93">1</label>
		</location>
		<location id="id2" x="187" y="-127">
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="25" y="-161">x&lt;10</label>
			<label kind="assignment" x="25" y="-119">var()</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-221" y="-153">x &lt; 5</label>
			<label kind="assignment" x="-212" y="-110">foo()</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
Process = Template();
// List one or more processes to be composed into a system.
system Process;
    </system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 1 [&lt;=10] {Process.r}</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
